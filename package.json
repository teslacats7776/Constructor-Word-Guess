{
  "name": "Constructor-Word-Guess",
  "version": "1.0.0",
  "description": "Advanced JavaScript Assignment: Constructor Word Guess Overview This homework assignment is REQUIRED. In this unit's assignment, you will create a Word Guess command-line game using constructor functions. Commits Having an active and healthy commit history on GitHub is important for your future job search. It is also extremely important for making sure your work is saved in your repository. If something breaks, committing often ensures you are able to go back to a working version of your code. Committing often is a signal to employers that you are actively working on your code and learning. We use the mantra “commit early and often.” This means that when you write code that works, add it and commit it! Numerous commits allow you to see how your app is progressing and give you a point to revert to if anything goes wrong. Be clear and descriptive in your commit messaging. When writing a commit message, avoid vague messages like \"fixed.\" Be descriptive so that you and anyone else looking at your repository knows what happened with each commit. We would like you to have well over 200 commits by graduation, so commit early and often! Submission on BCS Please submit the link to the Github Repository! Instructions The completed game should meet the following criteria: The completed game should be able to receive user input using the inquirer or prompt npm packages. Your solution should have, at minimum, three files: Letter.js: Contains a constructor, Letter. This constructor should be able to either display an underlying character or a blank placeholder (such as an underscore), depending on whether or not the user has guessed the letter. That means the constructor should define: A string value to store the underlying character for the letter A boolean value that stores whether that letter has been guessed yet A function that returns the underlying character if the letter has been guessed, or a placeholder (like an underscore) if the letter has not been guessed A function that takes a character as an argument and checks it against the underlying character, updating the stored boolean value to true if it was guessed correctly Word.js: Contains a constructor, Word that depends on the Letter constructor. This is used to create an object representing the current word the user is attempting to guess. That means the constructor should define: An array of new Letter objects representing the letters of the underlying word A function that returns a string representing the word. This should call the function on each letter object (the first function defined in Letter.js) that displays the character or an underscore and concatenate those together. A function that takes a character as an argument and calls the guess function on each letter object (the second function defined in Letter.js) index.js: The file containing the logic for the course of the game, which depends on Word.js and: Randomly selects a word and uses the Word constructor to store it Prompts the user for each guess and keeps track of the user's remaining guesses Letter.js should not require any other files. Word.js should only require Letter.js HINT: Write Letter.js first and test it on its own before moving on, then do the same thing with Word.js HINT: If you name your letter's display function toString, JavaScript will call that function automatically whenever casting that object to a string (check out this example: https://jsbin.com/facawetume/edit?js,console) Notes Since this assignment is a command-line application, you don't need to deploy it anywhere. You will, however, be required to upload it to Github. Remember to include a package.json file containing your project dependencies in your Github repo! Reminder: Submission on BCS Please submit the link to the Github Repository! jsbin.comjsbin.com JS Bin A live pastebin for HTML, CSS & JavaScript and a range of processors, including SCSS, CoffeeScript, Jade and more...(17 kB) https://static.jsbin.com/images/logo.png 9:40 Minimum Requirements Attempt to complete homework assignment as described in instructions. If unable to complete certain portions, please pseudocode these portions to describe what remains to be completed. Adding a README.md as well as adding this homework to your portfolio are required as well and more information can be found below. Create a README.md Add a README.md to your repository describing the project. Here are some resources for creating your README.md. Here are some resources to help you along the way: About READMEs Mastering Markdown",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/teslacats7776/Constructor-Word-Guess.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/teslacats7776/Constructor-Word-Guess/issues"
  },
  "homepage": "https://github.com/teslacats7776/Constructor-Word-Guess#readme",
  "dependencies": {
    "inquirer": "^7.1.0"
  }
}
